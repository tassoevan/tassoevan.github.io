{"version":3,"sources":["webpack:///./src/components/Hero/styles.js","webpack:///./src/components/Hero/index.js","webpack:///./src/components/SEO/index.js","webpack:///./src/pages/index.js"],"names":["Container","styled","section","withConfig","displayName","componentId","Hero","_ref","children","react_default","a","createElement","SEO","description","lang","meta","title","site","_2417117884","data","metaDescription","siteMetadata","Helmet_default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","IndexPage","_staticQueryData$data","components_Hero","components_SEO"],"mappings":"8HAEaA,SAAYC,EAAOC,QAAVC,WAAA,CAAAC,YAAA,oBAAAC,YAAA,gBAAGJ,CAAH,sqBCIPK,EAFF,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OAAkBC,EAAAC,EAAAC,cAACX,EAAD,KAAYQ,sBCQ3C,SAASI,EAATL,GAAiD,IAAlCM,EAAkCN,EAAlCM,YAAaC,EAAqBP,EAArBO,KAAMC,EAAeR,EAAfQ,KAAMC,EAAST,EAATS,MAC9BC,EADuCC,EAAAC,KACvCF,KAcFG,EAAkBP,GAAeI,EAAKI,aAAaR,YAEzD,OACEJ,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CACEa,eAAgB,CACdT,QAEFE,MAAOA,EACPQ,cAAa,QAAUP,EAAKI,aAAaL,MACzCD,KAAM,CACJ,CACEU,KAAI,cACJC,QAASN,GAEX,CACEO,SAAQ,WACRD,QAASV,GAEX,CACEW,SAAQ,iBACRD,QAASN,GAEX,CACEO,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAST,EAAKI,aAAaO,QAE7B,CACEH,KAAI,gBACJC,QAASV,GAEX,CACES,KAAI,sBACJC,QAASN,IAEXS,OAAOd,KAKfH,EAAIkB,aAAe,CACjBhB,KAAI,KACJC,KAAM,GACNF,YAAW,IAUED,eCnDAmB,UA5BG,WAAM,IAAAC,EAAAd,EAAAC,KAEpBF,KACEI,aAAgBL,EAHEgB,EAGFhB,MAAOH,EAHLmB,EAGKnB,YAgB3B,OACEJ,EAAAC,EAAAC,cAACsB,EAAD,KACExB,EAAAC,EAAAC,cAACuB,EAAD,CAAKlB,MAAM,SACXP,EAAAC,EAAAC,cAAA,UAAKK,GACLP,EAAAC,EAAAC,cAAA,SAAIE","file":"component---src-pages-index-js-a168fabfd65b81ec8109.js","sourcesContent":["import styled from \"styled-components\"\n\nexport const Container = styled.section`\n  background-color: hsl(270deg, 25%, 50%);\n  width: 100vw;\n  max-width: 100%;\n  height: 100vh;\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  justify-content: center;\n\n  h1 {\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\n      Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n    font-size: 3rem;\n    font-weight: 100;\n    line-height: 1.25;\n    margin: 0;\n    color: hsl(270deg, 25%, 90%);\n    text-shadow: 0 0 0.5rem hsl(270deg, 25%, 25%);\n  }\n\n  p {\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\n      Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n    font-size: 1.5rem;\n    font-weight: 300;\n    line-height: 1.25;\n    margin: 0;\n    color: hsl(270deg, 25%, 90%);\n    text-shadow: 0 0 0.25rem hsl(270deg, 25%, 25%);\n  }\n`\n","import React from \"react\"\n\nimport { Container } from \"./styles\"\n\nconst Hero = ({ children }) => <Container>{children}</Container>\n\nexport default Hero\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\n\nimport Hero from \"../components/Hero\"\nimport SEO from \"../components/SEO\"\n\nimport \"../reset.css\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst IndexPage = () => {\n  const {\n    site: {\n      siteMetadata: { title, description },\n    },\n  } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  return (\n    <Hero>\n      <SEO title=\"Home\" />\n      <h1>{title}</h1>\n      <p>{description}</p>\n    </Hero>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}