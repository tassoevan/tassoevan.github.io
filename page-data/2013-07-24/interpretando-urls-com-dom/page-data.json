{"componentChunkName":"component---src-templates-post-js","path":"/2013-07-24/interpretando-urls-com-dom/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Interpretando URLs com DOM\",\n  \"date\": \"2013-07-24T12:01:48.000Z\",\n  \"published\": true\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"function parseURL(url) {\\n  var a = document.createElement('a');\\n  a.href = url;\\n  return {\\n    href: a.href,\\n    scheme: a.protocol,\\n    host: a.host,\\n    port: a.port,\\n    path: a.pathname,\\n    query: a.search.charAt(0) == '?' ? a.search.substring(1) : null,\\n    hash: a.hash.charAt(0) == '#' ? a.hash.substring(1) : null,\\n  };\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Interpretando URLs com DOM","date":"2013-07-24T12:01:48.000Z","formattedDate":"24 de julho de 2013 às 12:01"},"wordCount":{"words":null}}},"pageContext":{"slug":"/2013-07-24/interpretando-urls-com-dom/","next":{"slug":"/2013-07-19/um-metodo-mais-confiavel-para-serializar-closures/","title":"Um método mais confiável para serializar closures"}}}}