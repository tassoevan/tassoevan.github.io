{"componentChunkName":"component---src-templates-post-js","path":"/2015-06-06/como-instalar-e-usar-o-composer/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Como instalar e usar o Composer?\",\n  \"date\": \"2015-06-06T05:30:00.000Z\",\n  \"published\": true\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Em projetos PHP atuais, \\xE9 praticamente imposs\\xEDvel um desenvolvedor fazer tudo do zero. Sempre existe um framework, uma library (biblioteca de c\\xF3digo) ou at\\xE9 uma \\\"fun\\xE7\\xE3ozinha\\\" que outros devs escreveram e que n\\xF3s utilizamos para entregar tudo dentro de prazos.\"), mdx(\"p\", null, \"Alguns exemplos? \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://laravel.com/\"\n  }), \"Laravel\"), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://framework.zend.com/\"\n  }), \"Zend Framework\"), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://www.yiiframework.com/\"\n  }), \"Yii\"), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://symfony.com/\"\n  }), \"Symfony\"), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://climate.thephpleague.com/\"\n  }), \"Climate\"), \" etc.\"), mdx(\"p\", null, \"Cada vez que utilizamos algo do tipo, estamos gerando uma \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"depend\\xEAncia\"), \" no projeto. Para que a nossa aplica\\xE7\\xE3o funcione, todas as depend\\xEAncias devem \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"ser resolvidas\"), \", isto \\xE9, o c\\xF3digo delas deve estar acess\\xEDvel.\"), mdx(\"h1\", null, \"O que \\xE9?\"), mdx(\"p\", null, \"O \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://getcomposer.org/\"\n  }), \"Composer\"), \" \\xE9 um \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"gerenciador de depend\\xEAncias\"), \" escrito em e escrito para PHP. Atrav\\xE9s dele, todas as depend\\xEAncias de um projeto s\\xE3o baixadas da Internet automaticamente na forma de \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"pacotes\"), \" e corretamente disponibilizadas num diret\\xF3rio. Inclusive com direito a autoloader.\"), mdx(\"h1\", null, \"Como instalar?\"), mdx(\"p\", null, \"O Composer \\xE9 disponibilizado como um arquivo PHAR (PHP archive) simples, mas para evitar m\\xFAltiplas c\\xF3pias dele espalhadas por a\\xED, o ideal \\xE9 instal\\xE1-lo globalmente.\"), mdx(\"h2\", null, \"Debian/Ubuntu/Linux Mint\"), mdx(\"p\", null, \"Se a ferramenta de linha de comando do PHP n\\xE3o est\\xE1 instalada,\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ sudo apt-get install php5-cli\\n\")), mdx(\"p\", null, \"Ent\\xE3o instalar \\xE9 f\\xE1cil como digitar no terminal isto:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"$ php -r \\\"readfile('https://getcomposer.org/installer');\\\" | sudo php -- --install-dir=/usr/bin --filename=composer\\n\")), mdx(\"p\", null, \"Para mais detalhes, consulte: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://getcomposer.org/doc/00-intro.md#installation-nix\"\n  }), \"http://getcomposer.org/doc/00-intro.md#installation-nix\")), mdx(\"h2\", null, \"Windows\"), mdx(\"p\", null, \"Baixe e execute o \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://getcomposer.org/Composer-Setup.exe\"\n  }), \"instalador oficial\"), \".\"), mdx(\"p\", null, \"Para mais detalhes, consulte: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://getcomposer.org/doc/00-intro.md#installation-windows\"\n  }), \"http://getcomposer.org/doc/00-intro.md#installation-windows\")), mdx(\"h1\", null, \"Como descrevar as depend\\xEAncias?\"), mdx(\"p\", null, \"Para come\\xE7ar, voc\\xEA precisa descrever quais s\\xE3o as depend\\xEAncias do seu projeto em algum lugar. Isso \\xE9 feito no arquivo \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"composer.json\"), \", que agora tamb\\xE9m deve fazer parte do seu c\\xF3digo. Como a extens\\xE3o sugere, ele deve ter um conte\\xFAdo JSON v\\xE1lido. Vamos come\\xE7ar com um arquivo simples:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n  \\\"name\\\": \\\"minha-empresa/meu-projeto\\\",\\n  \\\"description\\\": \\\"Meu primeiro projeto com Composer\\\",\\n  \\\"license\\\": \\\"proprietary\\\"\\n}\\n\")), mdx(\"p\", null, \"Os itens \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"name\"), \" e \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"description\"), \" s\\xE3o obrigat\\xF3rios e \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"license\"), \" \\xE9 recomendado. Voc\\xEA pode verificar se tudo est\\xE1 ok executando o comando:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ composer validate\\n./composer.json is valid\\n\")), mdx(\"p\", null, \"Agora podemos adicionar algumas depend\\xEAncias.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n  \\\"name\\\": \\\"minha-empresa/meu-projeto\\\",\\n  \\\"description\\\": \\\"Meu primeiro projeto com Composer\\\",\\n  \\\"license\\\": \\\"proprietary\\\",\\n  \\\"require\\\": {\\n    \\\"yiisoft/yii2\\\": \\\"~2.0.0\\\"\\n  }\\n}\\n\")), mdx(\"p\", null, \"Dentro da propriedade \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"require\"), \", eu defini que meu projeto tem como depend\\xEAncia o framework Yii.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Por que ele est\\xE1 descrito como \", mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"yiisoft/yii2\"), \"?\"), \" Porque foi assim que a Yiisoft o registrou no \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://packagist.org/packages/yiisoft/yii2\"\n  }), \"Packagist\"), \", o principal reposit\\xF3rio de pacotes do Composer.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"O que significa \", mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"~2.0.0\"), \"?\"), \" Estamos especificando que queremos qualquer pacote cuja vers\\xE3o seja igual ou superior a 2.0.0 e inferior a 2.1.0. Existem v\\xE1rias \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://getcomposer.org/doc/02-libraries.md#specifying-the-version\"\n  }), \"formas de descrever as vers\\xF5es\"), \" que precisamos. As recomenda\\xE7\\xF5es principais s\\xE3o (1) evitar as vers\\xF5es \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dev-master\"), \", que s\\xE3o baseadas no \\xFAltimo c\\xF3digo escrito nos pacotes e, portanto, mut\\xE1veis; e (2) evitar a tenta\\xE7\\xE3o de utilizar \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"*\"), \" para ter sempre a \\xFAltima vers\\xE3o dispon\\xEDvel. Existe uma diferen\\xE7a enorme, por exemplo, entre a vers\\xE3o 1.1 e a vers\\xE3o 2.0 do Yii. Atualizar depend\\xEAncias assim significa conviver com o fato de ter que mudar todo seu c\\xF3digo quando uma delas for atualizada.\"), mdx(\"h1\", null, \"Enfim, como utilizar?\"), mdx(\"p\", null, \"Com tudo isso feito, estamos a um mero passo de ter o Yii no nosso projeto:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ composer install\\n\")), mdx(\"p\", null, \"O Composer vai verificar os reposit\\xF3rios, como o Packagist; verificar se possuem os pacotes necess\\xE1rios; baix\\xE1-los; adicion\\xE1-los ao diret\\xF3rio \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vendor\"), \" do projeto; e criar um arquivo \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"composer.lock\"), \", que \\xE9 uma vers\\xE3o superdetalhada do \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"composer.json\"), \", descrevendo at\\xE9 todas as subdep\\xEAncias (i.e., as depend\\xEAncias das depend\\xEAncias do projeto) e vers\\xF5es baixadas.\"), mdx(\"p\", null, \"Pronto.\"), mdx(\"p\", null, \"Para atualizar as depend\\xEAncias ou reinstal\\xE1-las, utilize:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ composer update\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Como instalar e usar o Composer?","date":"2015-06-06T05:30:00.000Z","formattedDate":"6 de junho de 2015 às 05:30"},"wordCount":{"words":485}}},"pageContext":{"slug":"/2015-06-06/como-instalar-e-usar-o-composer/","next":{"slug":"/2014-12-03/git-para-times-de-todos-os-tamanhos/","title":"Git para times de todos os tamanhos"}}}}