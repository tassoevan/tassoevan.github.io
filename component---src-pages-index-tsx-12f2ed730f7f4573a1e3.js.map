{"version":3,"file":"component---src-pages-index-tsx-12f2ed730f7f4573a1e3.js","mappings":"kQAKMA,EAAeC,EAAAA,QAAAA,QAAAA,WAAH,+DAAGA,CAAH,qDAmBlB,MAbA,WACE,OAA+BC,EAAAA,EAAAA,KAAvBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,YAEf,OACEC,EAAAA,cAACL,EAAD,KACEK,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAACC,EAAAA,KAAD,CAAMC,GAAG,KAAKJ,IAEhBE,EAAAA,cAAAA,IAAAA,KAAID,K,UCdJI,EAAiBP,EAAAA,QAAAA,IAAAA,WAAH,kEAAGA,CAAH,mCAmEpB,MA9DA,WACE,IAAMQ,GAAOC,EAAAA,EAAAA,gBAAc,cAqC3B,OACEL,EAAAA,cAACG,EAAD,KACGC,EAAKE,OAAOC,MAAMC,KACjB,oBACEC,YAAeX,EADjB,EACiBA,MAAOY,EADxB,EACwBA,KAAMC,EAD9B,EAC8BA,cAClBC,EAFZ,EAEEC,OAAUD,KACVE,EAHF,EAGEA,WACAC,EAJF,EAIEA,KAJF,OAMEf,EAAAA,cAACgB,EAAAA,EAAD,CACEC,IAAKL,EACLA,KAAMA,EACNd,MAAOA,EACPY,KAAMA,EACNC,cAAeA,EACfG,WAAYA,EACZC,KAAMA,SC7ClB,MAZA,WACE,OACEf,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAACkB,EAAAA,EAAD,MACAlB,EAAAA,cAACmB,EAAAA,EAAD,KACEnB,EAAAA,cAACoB,EAAD,MACApB,EAAAA,cAACqB,EAAD","sources":["webpack://@tassoevan/tassoevan.github.io/./src/components/Header.tsx","webpack://@tassoevan/tassoevan.github.io/./src/components/PostList.tsx","webpack://@tassoevan/tassoevan.github.io/./src/pages/index.tsx"],"sourcesContent":["import { Link } from 'gatsby';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useSiteMetadata } from '../hooks/useSiteMetadata';\n\nconst StyledHeader = styled.section`\n  text-align: center;\n  max-width: 38em;\n  margin: 0 auto;\n`;\n\nfunction Header() {\n  const { title, description } = useSiteMetadata();\n\n  return (\n    <StyledHeader>\n      <h1>\n        <Link to='/'>{title}</Link>\n      </h1>\n      <p>{description}</p>\n    </StyledHeader>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport Post from './Post';\n\nconst StyledPostList = styled.div`\n  max-width: 38em;\n  margin: 0 auto;\n`;\n\nfunction PostList() {\n  const data = useStaticQuery<{\n    allMdx: {\n      nodes: {\n        frontmatter: {\n          title: string;\n          date: string;\n          formattedDate: string;\n        };\n        fields: {\n          slug: string;\n        };\n        body: string;\n        timeToRead: number;\n      }[];\n    };\n  }>(graphql`\n    {\n      allMdx(\n        sort: { fields: frontmatter___date, order: DESC }\n        filter: { frontmatter: { published: { eq: true } } }\n      ) {\n        nodes {\n          frontmatter {\n            title\n            date\n            formattedDate: date(formatString: \"LLL\", locale: \"pt-BR\")\n          }\n          fields {\n            slug\n          }\n          timeToRead\n          body\n        }\n      }\n    }\n  `);\n\n  return (\n    <StyledPostList>\n      {data.allMdx.nodes.map(\n        ({\n          frontmatter: { title, date, formattedDate },\n          fields: { slug },\n          timeToRead,\n          body,\n        }) => (\n          <Post\n            key={slug}\n            slug={slug}\n            title={title}\n            date={date}\n            formattedDate={formattedDate}\n            timeToRead={timeToRead}\n            body={body}\n          />\n        )\n      )}\n    </StyledPostList>\n  );\n}\n\nexport default PostList;\n","import React from 'react';\n\nimport SEO from '../components/SEO';\nimport Layout from '../components/Layout';\nimport Header from '../components/Header';\nimport PostList from '../components/PostList';\n\nfunction IndexPage() {\n  return (\n    <>\n      <SEO />\n      <Layout>\n        <Header />\n        <PostList />\n      </Layout>\n    </>\n  );\n}\n\nexport default IndexPage;\n"],"names":["StyledHeader","styled","useSiteMetadata","title","description","React","Link","to","StyledPostList","data","useStaticQuery","allMdx","nodes","map","frontmatter","date","formattedDate","slug","fields","timeToRead","body","Post","key","SEO","Layout","Header","PostList"],"sourceRoot":""}