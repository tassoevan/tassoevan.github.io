{"version":3,"file":"component---src-templates-post-tsx-content-file-path-posts-2014-10-16-symfony-process-mdx-15213c595577521373fe.js","mappings":"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","sources":["webpack://@tassoevan/tassoevan.github.io/./posts/2014-10-16/symfony-process.mdx","webpack://@tassoevan/tassoevan.github.io/./src/templates/post.tsx","webpack://@tassoevan/tassoevan.github.io/./src/components/NavBar.tsx","webpack://@tassoevan/tassoevan.github.io/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    em: \"em\",\n    strong: \"strong\",\n    code: \"code\",\n    ol: \"ol\",\n    li: \"li\",\n    h1: \"h1\",\n    pre: \"pre\",\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Como \", React.createElement(_components.a, {\n    href: \"http://stackoverflow.com/questions/13600598/convert-pdf-to-jpg-image-with-php\"\n  }, \"converter um PDF em imagens PNG ou JPEG\"), \", \", React.createElement(_components.em, null, \"usando PHP\"), \"? Como \", React.createElement(_components.a, {\n    href: \"http://stackoverflow.com/questions/1571134/how-can-i-convert-an-avi-file-to-flv-format-with-php\"\n  }, \"converter arquivos de vídeo enviados via upload em formatos para a web\"), \", como WebM ou FLV, \", React.createElement(_components.em, null, \"usando PHP\"), \"? Como realizar uma tarefa administrativa no servidor, \", React.createElement(_components.em, null, \"usando PHP\"), \"?\"), \"\\n\", React.createElement(_components.p, null, \"Muitas vezes nos fazemos essas perguntas e passamos por algumas decepções ao procurar soluções. A primeira é descobrir que nem sempre podemos resolver usando única e exclusivamente a linguagem e/ou tecnologia que usamos em nossos projetos: PHP não foi construída para executar tarefas longas e que demandam alto processamento, como converter formatos de imagem, áudio e vídeo. Até podemos considerar o uso de extensões (como a \", React.createElement(_components.a, {\n    href: \"http://php.net/manual/en/book.imagick.php\"\n  }, \"ImageMagick\"), \"), mas geralmente o modo rápido de conseguir o que se quer é através de \", React.createElement(_components.strong, null, \"programas externos\"), \", como \", React.createElement(_components.code, null, \"avconv\"), \" e \", React.createElement(_components.code, null, \"convert\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"A principal dificuldade esperada ao realizar a integração entre scripts PHP e programas externos é a perda de compatibilidade nas diversas plataformas em que PHP é executável. A maioria dos exemplos de uso das funções \", React.createElement(_components.code, null, \"exec()\"), \", \", React.createElement(_components.code, null, \"shell_exec()\"), \" e \", React.createElement(_components.code, null, \"passthru()\"), \" utiliza programas do ecossistema Unix e, ao menos no Brasil, o número de desenvolvedores PHP que rodam Windows em suas estações de trabalho é grande. Para eles, usar programas externos é adicionar ao seu código algo que só poderá ser testado em servidores de teste ou desenvolvimento — uma realidade que vem mudando, a passos de formiga, com a adoção de ferramentas como \", React.createElement(_components.a, {\n    href: \"http://www.vagrantup.com/\"\n  }, \"Vagrant\"), \" e \", React.createElement(_components.a, {\n    href: \"http://www.docker.com/\"\n  }, \"Docker\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Então é simples usar programas externos? Não. Todo programa é executado como um novo \", React.createElement(_components.strong, null, \"processo\"), \" do sistema, chamado pelo \", React.createElement(_components.strong, null, \"shell\"), \" através de uma \", React.createElement(_components.strong, null, \"linha de comando\"), \". E neste contexto, existem algumas coisas a se considerar:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Deve ser garantido que nenhum número abusivo de processos seja executado;\"), \"\\n\", React.createElement(_components.li, null, \"Deve ser garantido que \", React.createElement(_components.a, {\n    href: \"http://en.wikipedia.org/wiki/Code_injection#Shell_injection\"\n  }, \"nenhum dado enviado execute código arbitrário\"), \";\"), \"\\n\", React.createElement(_components.li, null, \"Todo processo possui uma \", React.createElement(_components.a, {\n    href: \"http://en.wikipedia.org/wiki/Standard_streams#Standard_input_.28stdin.29\"\n  }, \"stream de entrada de dados\"), \", uma \", React.createElement(_components.a, {\n    href: \"http://en.wikipedia.org/wiki/Standard_streams#Standard_output_.28stdout.29\"\n  }, \"stream de saída normal\"), \" e uma \", React.createElement(_components.a, {\n    href: \"http://en.wikipedia.org/wiki/Standard_streams#Standard_error_.28stderr.29\"\n  }, \"stream de saída de erros\"), \";\"), \"\\n\", React.createElement(_components.li, null, \"Alguns processos exigem interação do usuário através da stream de entrada;\"), \"\\n\", React.createElement(_components.li, null, \"Alguns processos são longos;\"), \"\\n\", React.createElement(_components.li, null, \"Alguns processos escrevem dados em formatos complexos nas streams de saída;\"), \"\\n\", React.createElement(_components.li, null, \"Processos retornam um \", React.createElement(_components.a, {\n    href: \"http://en.wikipedia.org/wiki/Exit_status\"\n  }, \"código de status de fim de execução\"), \" que indica erros ocorridos durante a execução.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Vamos ver que opções as funções padrão do PHP nos fornecem para trabalhar com processos:\"), \"\\n\", React.createElement(_components.h1, null, React.createElement(_components.a, {\n    href: \"http://php.net/manual/en/function.shell-exec.php\"\n  }, React.createElement(_components.code, null, \"string shell_exec(string $cmd)\")), \" ou \", React.createElement(_components.a, {\n    href: \"http://php.net/manual/en/language.operators.execution.php\"\n  }, React.createElement(_components.code, null, \"`$cmd`\"))), \"\\n\", React.createElement(_components.p, null, \"É a função ideal para processos invocados com uma linha de comando simples e que escrevem apenas uma linha de texto na stream de saída.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Somente um processo pode ser executado por vez, a menos que se utilizem mecanismos de execução paralela presentes no shell (e.g. \", React.createElement(_components.code, null, \"start convert doc.pdf images.jpg\"), \" em Windows).\"), \"\\n\", React.createElement(_components.li, null, \"Você depende de \", React.createElement(_components.code, null, \"escapeshellarg($arg)\"), \" para escapar argumentos vindos da entrada de usuário. Usar ou não usar é por sua conta e risco. Para o operador de execução (\", React.createElement(_components.code, null, \"` `\"), \") é impossível passar dados de usuário, como se a definição da linha de comando do processo fosse constante.\"), \"\\n\", React.createElement(_components.li, null, \"Tudo o que foi escrito na stream de saída é retornado pela função. Em caso de erro, entretanto, é retornado o valor \", React.createElement(_components.code, null, \"NULL\"), \", mesmo que dados tenham sido escritos.\"), \"\\n\", React.createElement(_components.li, null, \"Não permite escrever dados na stream de entrada.\"), \"\\n\", React.createElement(_components.li, null, \"Você não pode definir um tempo máximo para a execução do processo, embora fique limitado pelo limite de tempo de execução do próprio script PHP.\"), \"\\n\", React.createElement(_components.li, null, \"Você precisa parsear toda a stream de saída obtida através do retorno da função/expressão.\"), \"\\n\", React.createElement(_components.li, null, \"Você não obtém o código de status. Se ele for zero, a função retorna o conteúdo da stream de saída; caso contrário, \", React.createElement(_components.code, null, \"NULL\"), \" é retornado.\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, React.createElement(_components.a, {\n    href: \"http://php.net/manual/en/function.exec.php\"\n  }, React.createElement(_components.code, null, \"string exec(string $command[, array &$output[, int &$return_var]])\"))), \"\\n\", React.createElement(_components.p, null, \"Esta função adiciona um grau maior de controle sob o que é escrito na stream de saída e sobre os códigos de status.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Somente um processo pode ser executado por vez, a menos que se utilizem mecanismos de execução paralela presentes no shell.\"), \"\\n\", React.createElement(_components.li, null, \"Você depende de \", React.createElement(_components.code, null, \"escapeshellarg($arg)\"), \" para escapar argumentos vindos da entrada de usuário. Usar ou não usar é por sua conta e risco.\"), \"\\n\", React.createElement(_components.li, null, \"Você pode ter acesso ao que foi escrito na stream de saída através do array \", React.createElement(_components.code, null, \"$output\"), \" ou apenas da última linha escrita através do retorno da função.\"), \"\\n\", React.createElement(_components.li, null, \"Não permite escrever dados na stream de entrada.\"), \"\\n\", React.createElement(_components.li, null, \"Você não pode definir um tempo máximo para a execução do processo, embora fique limitado pelo limite de tempo de execução do próprio script PHP.\"), \"\\n\", React.createElement(_components.li, null, \"Você precisa parsear toda a stream de saída obtida através de \", React.createElement(_components.code, null, \"$output\"), \".\"), \"\\n\", React.createElement(_components.li, null, \"Você obtém o código de status através de \", React.createElement(_components.code, null, \"$return_var\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, React.createElement(_components.a, {\n    href: \"http://php.net/manual/en/function.passthru.php\"\n  }, React.createElement(_components.code, null, \"void passthru(string $command[, int &$return_var])\"))), \"\\n\", React.createElement(_components.p, null, \"O uso mais comum desta função é quando o script PHP funciona como um simples proxy para um programa externo, como um gerador de imagens ou compilador.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Somente um processo pode ser executado por vez, a menos que se utilizem mecanismos de execução paralela presentes no shell.\"), \"\\n\", React.createElement(_components.li, null, \"Você depende de \", React.createElement(_components.code, null, \"escapeshellarg($arg)\"), \" para escapar argumentos vindos da entrada de usuário. Usar ou não usar é por sua conta e risco.\"), \"\\n\", React.createElement(_components.li, null, \"A stream de saída do processo é redirecionada para a stream de saída do script PHP. Se você quiser capturar a saída, vai ter que utilizar mecanismos de \", React.createElement(_components.em, null, \"output buffering\"), \" (\", React.createElement(_components.code, null, \"ob_start()\"), \").\"), \"\\n\", React.createElement(_components.li, null, \"Não permite escrever dados na stream de entrada.\"), \"\\n\", React.createElement(_components.li, null, \"Você não pode definir um tempo máximo para a execução do processo, embora fique limitado pelo limite de tempo de execução do próprio script PHP.\"), \"\\n\", React.createElement(_components.li, null, \"Você precisa parsear toda a stream de saída obtida através de \", React.createElement(_components.em, null, \"output buffering\"), \".\"), \"\\n\", React.createElement(_components.li, null, \"Você obtém o código de status através de \", React.createElement(_components.code, null, \"$return_var\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, React.createElement(_components.a, {\n    href: \"php.net/manual/en/function.proc-open.php\"\n  }, React.createElement(_components.code, null, \"resource proc_open(string $cmd, array $descriptorspec, array &$pipes[, string $cwd[, array $env[, array $other_options]]])\"))), \"\\n\", React.createElement(_components.p, null, \"E aqui temos o maior controle possível de processos (inclusive do diretório de trabalho do processo, via \", React.createElement(_components.code, null, \"$cwd\"), \") através de scripts PHP.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Esta função é não-bloqueante, de modo que você pode iniciar quantos processos julgar adequado. Vale o bom senso para garantir que uma quantidade não-abusiva de processos sejam rodados paralelamente.\"), \"\\n\", React.createElement(_components.li, null, \"Você depende de \", React.createElement(_components.code, null, \"escapeshellarg($arg)\"), \" para escapar argumentos vindos da entrada de usuário. Usar ou não usar é por sua conta e risco.\"), \"\\n\", React.createElement(_components.li, null, \"Você tem acesso a \", React.createElement(_components.em, null, \"stdin\"), \", \", React.createElement(_components.em, null, \"stdout\"), \" e \", React.createElement(_components.em, null, \"stderr\"), \" através do array \", React.createElement(_components.code, null, \"$pipes\"), \", como se fossem ponteiros de arquivo tradicionais.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.em, null, \"stdin\"), \" é uma stream de escrita, onde você pode escrever usando funções simples como \", React.createElement(_components.code, null, \"fwrite()\"), \".\"), \"\\n\", React.createElement(_components.li, null, \"O controle de \", React.createElement(_components.em, null, \"timeout\"), \" dos processos pode ser implementado, já que o processo roda paralelamente ao script.\"), \"\\n\", React.createElement(_components.li, null, \"A leitura dos dados escritos em \", React.createElement(_components.em, null, \"stdout\"), \" e \", React.createElement(_components.em, null, \"stderr\"), \" não difere da leitura de um arquivo; assim, as mesmas técnicas empregadas para parsear um arquivo podem ser aplicadas, seja de forma integral (ler toda a stream e interpretar o formato), seja de forma contínua (ler a stream linha a linha e interpretar durante a execução).\"), \"\\n\", React.createElement(_components.li, null, \"Você pode ter o código de status a partir do retorno de \", React.createElement(_components.code, null, \"proc_close($process)\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"Tudo é complicado\"), \"\\n\", React.createElement(_components.p, null, \"Pelo que se percebe, a complexidade para se executar certos processos via PHP é semelhante à própria complexidade do processo, i.e., um processo que exige interação com todas as streams, \", React.createElement(_components.em, null, \"timeout\"), \" e controle do código de status vai demandar o uso de uma função muito complexa. \", React.createElement(_components.a, {\n    href: \"http://php.net/manual/en/function.proc-open.php#example-3774\"\n  }, \"Veja você mesmo\"), \":\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-php\"\n  }, \"<?php\\n$descriptorspec = array(\\n   0 => array(\\\"pipe\\\", \\\"r\\\"),  // stdin is a pipe that the child will read from\\n   1 => array(\\\"pipe\\\", \\\"w\\\"),  // stdout is a pipe that the child will write to\\n   2 => array(\\\"file\\\", \\\"/tmp/error-output.txt\\\", \\\"a\\\") // stderr is a file to write to\\n);\\n\\n$cwd = '/tmp';\\n$env = array('some_option' => 'aeiou');\\n\\n$process = proc_open('php', $descriptorspec, $pipes, $cwd, $env);\\n\\nif (is_resource($process)) {\\n    // $pipes now looks like this:\\n    // 0 => writeable handle connected to child stdin\\n    // 1 => readable handle connected to child stdout\\n    // Any error output will be appended to /tmp/error-output.txt\\n\\n    fwrite($pipes[0], '<?php print_r($_ENV); ?>');\\n    fclose($pipes[0]);\\n\\n    echo stream_get_contents($pipes[1]);\\n    fclose($pipes[1]);\\n\\n    // It is important that you close any pipes before calling\\n    // proc_close in order to avoid a deadlock\\n    $return_value = proc_close($process);\\n\\n    echo \\\"command returned $return_value\\\\n\\\";\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"Nesse exemplo, abrimos o processo \", React.createElement(_components.code, null, \"php\"), \", escrevemos na stream de entrada o código \", React.createElement(_components.code, null, \"<?php print_r($_ENV); ?>\"), \" e lemos o resultado da execução na stream de saída do processo. Nenhum mecanismo de \", React.createElement(_components.em, null, \"timeout\"), \" é implementado, bem como nenhum controle de erros é realizado através da stream de erros e do código de status, e mesmo assim temos um código assustador para programadores novatos.\"), \"\\n\", React.createElement(_components.h2, null, \"Symfony Process ao resgate\"), \"\\n\", React.createElement(_components.p, null, \"Streams, código de status, \", React.createElement(_components.em, null, \"timeout\"), \", diretório de trabalho, argumentos escapados... Muitos são os componentes e detalhes presentes na execução de um processo. Para nossa sorte, o componente \", React.createElement(_components.a, {\n    href: \"http://symfony.com/doc/current/components/process.html\"\n  }, \"Symfony Process\"), \" provê um mecanismo simples para execução e controle de processos (e ao contrário do que muitos pensam \", React.createElement(_components.strong, null, \"não é necessário estar utilizando o framework Symfony para usufruir deste componente\"), \"). Vamos recriar o exemplo supracitado para demonstrar isso.\"), \"\\n\", React.createElement(_components.p, null, \"Primeiramente, você pode baixar as classes do Symfony Process de modo tradicional, mas isso é desaconselhado; prefira fazer o controle deste e de demais códigos de terceiros através do \", React.createElement(_components.a, {\n    href: \"https://getcomposer.org\"\n  }, \"Composer\"), \", um gerenciador de dependências para PHP que se tornou praticamente o padrão da indústria. Caso você ainda não esteja utilizando no seu projeto, execute no terminal\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sh\"\n  }, \"$ composer init\\n\")), \"\\n\", React.createElement(_components.p, null, \"E forneça informações básicas do seu projeto. Assim que o arquivo \", React.createElement(_components.code, null, \"composer.json\"), \" estiver disponível, execute\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sh\"\n  }, \"$ composer require symfony/process\\n\")), \"\\n\", React.createElement(_components.p, null, \"Para adicionar ao seu projeto a última versão do componente Symfony Process. Todo o código fica disponível no diretório \", React.createElement(_components.code, null, \"vendor/symfony/process\"), \" e o arquivo \", React.createElement(_components.code, null, \"composer.lock\"), \" é criado para registrar qual a versão utilizada.\"), \"\\n\", React.createElement(_components.p, null, \"Com a library em mãos, vamos recriar o exemplo passo-a-passo. Escreva, num arquivo chamado \", React.createElement(_components.code, null, \"exemplo.php\"), \", as seguintes linhas:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-php\"\n  }, \"<?php\\nrequire __DIR__.'/vendor/autoload.php';\\n\\nuse Symfony\\\\Component\\\\Process\\\\Process;\\n\")), \"\\n\", React.createElement(_components.p, null, \"A primeira linha vai adicionar o autoloader do Composer, tornando acessíveis todas as classes do Symfony Process. A linha seguinte permite que a classe \", React.createElement(_components.code, null, \"Symfony\\\\Component\\\\Process\\\\Process\"), \" possa ser chamada apenas de \", React.createElement(_components.code, null, \"Process\"), \" no script. Ainda no mesmo arquivo, escreva:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-php\"\n  }, \"$process = new Process('php');\\n\")), \"\\n\", React.createElement(_components.p, null, \"Essa linha não executa o processo \", React.createElement(_components.code, null, \"php\"), \" de imediato, apenas prepara uma instância da classe \", React.createElement(_components.code, null, \"Process\"), \" que representa um processo antes, durante, e após sua execução.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-php\"\n  }, \"$process->setInput('<?php print_r($_ENV); ?>');\\n\")), \"\\n\", React.createElement(_components.p, null, \"Aqui foi definido qual conteúdo será escrito em \", React.createElement(_components.em, null, \"stdin\"), \" que o processo seja executado (esse método lança \", React.createElement(_components.code, null, \"RuntimeException\"), \" se é executado depois que o processo é executado).\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-php\"\n  }, \"$process->run(function ($type, $buffer) {\\n    if (Process::ERR === $type) {\\n        echo 'ERR > '.$buffer;\\n    } else {\\n        echo 'OUT > '.$buffer;\\n    }\\n});\\n\")), \"\\n\", React.createElement(_components.p, null, \"Aqui o processo é executado de fato, de forma síncrona (para executar o processo de forma asíncrona, \", React.createElement(_components.code, null, \"$process->start()\"), \" deve ser invocado no lugar de \", React.createElement(_components.code, null, \"$process->run()\"), \"), mas com um adendo: toda saída gerada pelo processo, em \", React.createElement(_components.em, null, \"stdout\"), \" e \", React.createElement(_components.em, null, \"stderr\"), \", é passada imediatamente para o callable passado como parâmetro do método \", React.createElement(_components.code, null, \"run()\"), \" (neste caso, é uma closure). O callable deve aceitar dois parâmetros: \", React.createElement(_components.code, null, \"$type\"), \", que indica se a saída foi escrita em \", React.createElement(_components.em, null, \"stdout\"), \" ou \", React.createElement(_components.em, null, \"stderr\"), \"; \", React.createElement(_components.code, null, \"$buffer\"), \", que contém o texto escrito.\"), \"\\n\", React.createElement(_components.p, null, \"E... Isso é tudo. Você não precisa fechar o processo, muito menos pará-lo. Segue o exemplo completo:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-php\"\n  }, \"<?php\\nrequire __DIR__.'/vendor/autoload.php';\\n\\nuse Symfony\\\\Component\\\\Process\\\\Process;\\n\\n$process = new Process('php');\\n$process->setInput('<?php print_r($_ENV); ?>');\\n$process->run(function ($type, $buffer) {\\n    if (Process::ERR === $type) {\\n        echo 'ERR > '.$buffer;\\n    } else {\\n        echo 'OUT > '.$buffer;\\n    }\\n});\\n\\n\")), \"\\n\", React.createElement(_components.h3, null, \"Agora vá!\"), \"\\n\", React.createElement(_components.p, null, \"Espero que este artigo tenha instigado o leitor investir um pouco de atenção ao componente Symfony Process. As possibilidades com ele são interessantes, principalmente se o seu desejo for de adicionar poder de fogo à sua aplicação web. Em breve devo demonstrar mais casos de uso, como invocação de \", React.createElement(_components.code, null, \"convert\"), \", \", React.createElement(_components.code, null, \"avconv\"), \" e \", React.createElement(_components.code, null, \"rsync\"), \". Até lá!\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/tassoevan.github.io/tassoevan.github.io/posts/2014-10-16/symfony-process.mdx\";\nimport React from 'react';\nimport SEO from '../components/SEO';\nimport Layout from '../components/Layout';\nimport NavBar from '../components/NavBar';\nimport Post from '../components/Post';\nconst query = \"2179984064\";\nfunction PostTemplate(_ref) {\n  let {pageContext, data, children} = _ref;\n  const {frontmatter: {title, date}, slug, next} = pageContext;\n  const {excerpt, timeToRead} = data.mdx;\n  return React.createElement(React.Fragment, null, React.createElement(SEO, {\n    title: title,\n    description: excerpt\n  }), React.createElement(Layout, null, React.createElement(NavBar, null), React.createElement(Post, {\n    slug: slug,\n    title: title,\n    date: new Date(Date.parse(date)),\n    timeToRead: Math.ceil(timeToRead),\n    next: next\n  }, children)));\n}\nPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSiteMetadata } from '../hooks/useSiteMetadata';\nimport Link from './Link';\n\nconst StyledNavBar = styled.nav`\n  h1 {\n    font-size: 1em;\n    font-weight: normal;\n    margin: 0;\n  }\n`;\n\nfunction NavBar() {\n  const { title, description } = useSiteMetadata();\n\n  return (\n    <StyledNavBar>\n      <h1>\n        <Link href='/' title={description}>\n          {title}\n        </Link>\n      </h1>\n    </StyledNavBar>\n  );\n}\n\nexport default NavBar;\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","em","strong","code","ol","li","h1","pre","h2","h3","_provideComponents","components","React","href","className","wrapper","MDXLayout","PostTemplate","_ref","pageContext","data","children","frontmatter","title","date","slug","next","excerpt","timeToRead","mdx","SEO","description","Layout","NavBar","Post","Date","parse","Math","ceil","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","StyledNavBar","styled","nav","withConfig","displayName","componentId","useSiteMetadata","Link","emptyComponents","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}