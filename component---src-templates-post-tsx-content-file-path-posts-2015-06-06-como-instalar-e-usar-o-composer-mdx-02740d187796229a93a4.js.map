{"version":3,"file":"component---src-templates-post-tsx-content-file-path-posts-2015-06-06-como-instalar-e-usar-o-composer-mdx-02740d187796229a93a4.js","mappings":"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","sources":["webpack://@tassoevan/tassoevan.github.io/./posts/2015-06-06/como-instalar-e-usar-o-composer.mdx","webpack://@tassoevan/tassoevan.github.io/./src/templates/post.tsx","webpack://@tassoevan/tassoevan.github.io/./src/components/NavBar.tsx","webpack://@tassoevan/tassoevan.github.io/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    em: \"em\",\n    h1: \"h1\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Em projetos PHP atuais, é praticamente impossível um desenvolvedor fazer tudo do zero. Sempre existe um framework, uma library (biblioteca de código) ou até uma \\\"funçãozinha\\\" que outros devs escreveram e que nós utilizamos para entregar tudo dentro de prazos.\"), \"\\n\", React.createElement(_components.p, null, \"Alguns exemplos? \", React.createElement(_components.a, {\n    href: \"http://laravel.com/\"\n  }, \"Laravel\"), \", \", React.createElement(_components.a, {\n    href: \"http://framework.zend.com/\"\n  }, \"Zend Framework\"), \", \", React.createElement(_components.a, {\n    href: \"http://www.yiiframework.com/\"\n  }, \"Yii\"), \", \", React.createElement(_components.a, {\n    href: \"https://symfony.com/\"\n  }, \"Symfony\"), \", \", React.createElement(_components.a, {\n    href: \"http://climate.thephpleague.com/\"\n  }, \"Climate\"), \" etc.\"), \"\\n\", React.createElement(_components.p, null, \"Cada vez que utilizamos algo do tipo, estamos gerando uma \", React.createElement(_components.em, null, \"dependência\"), \" no projeto. Para que a nossa aplicação funcione, todas as dependências devem \", React.createElement(_components.em, null, \"ser resolvidas\"), \", isto é, o código delas deve estar acessível.\"), \"\\n\", React.createElement(_components.h1, null, \"O que é?\"), \"\\n\", React.createElement(_components.p, null, \"O \", React.createElement(_components.a, {\n    href: \"https://getcomposer.org/\"\n  }, \"Composer\"), \" é um \", React.createElement(_components.em, null, \"gerenciador de dependências\"), \" escrito em e escrito para PHP. Através dele, todas as dependências de um projeto são baixadas da Internet automaticamente na forma de \", React.createElement(_components.em, null, \"pacotes\"), \" e corretamente disponibilizadas num diretório. Inclusive com direito a autoloader.\"), \"\\n\", React.createElement(_components.h1, null, \"Como instalar?\"), \"\\n\", React.createElement(_components.p, null, \"O Composer é disponibilizado como um arquivo PHAR (PHP archive) simples, mas para evitar múltiplas cópias dele espalhadas por aí, o ideal é instalá-lo globalmente.\"), \"\\n\", React.createElement(_components.h2, null, \"Debian/Ubuntu/Linux Mint\"), \"\\n\", React.createElement(_components.p, null, \"Se a ferramenta de linha de comando do PHP não está instalada,\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sh\"\n  }, \"$ sudo apt-get install php5-cli\\n\")), \"\\n\", React.createElement(_components.p, null, \"Então instalar é fácil como digitar no terminal isto:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"$ php -r \\\"readfile('https://getcomposer.org/installer');\\\" | sudo php -- --install-dir=/usr/bin --filename=composer\\n\")), \"\\n\", React.createElement(_components.p, null, \"Para mais detalhes, consulte: \", React.createElement(_components.a, {\n    href: \"http://getcomposer.org/doc/00-intro.md#installation-nix\"\n  }, \"http://getcomposer.org/doc/00-intro.md#installation-nix\")), \"\\n\", React.createElement(_components.h2, null, \"Windows\"), \"\\n\", React.createElement(_components.p, null, \"Baixe e execute o \", React.createElement(_components.a, {\n    href: \"https://getcomposer.org/Composer-Setup.exe\"\n  }, \"instalador oficial\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Para mais detalhes, consulte: \", React.createElement(_components.a, {\n    href: \"http://getcomposer.org/doc/00-intro.md#installation-windows\"\n  }, \"http://getcomposer.org/doc/00-intro.md#installation-windows\")), \"\\n\", React.createElement(_components.h1, null, \"Como descrevar as dependências?\"), \"\\n\", React.createElement(_components.p, null, \"Para começar, você precisa descrever quais são as dependências do seu projeto em algum lugar. Isso é feito no arquivo \", React.createElement(_components.code, null, \"composer.json\"), \", que agora também deve fazer parte do seu código. Como a extensão sugere, ele deve ter um conteúdo JSON válido. Vamos começar com um arquivo simples:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-json\"\n  }, \"{\\n  \\\"name\\\": \\\"minha-empresa/meu-projeto\\\",\\n  \\\"description\\\": \\\"Meu primeiro projeto com Composer\\\",\\n  \\\"license\\\": \\\"proprietary\\\"\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"Os itens \", React.createElement(_components.code, null, \"name\"), \" e \", React.createElement(_components.code, null, \"description\"), \" são obrigatórios e \", React.createElement(_components.code, null, \"license\"), \" é recomendado. Você pode verificar se tudo está ok executando o comando:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sh\"\n  }, \"$ composer validate\\n./composer.json is valid\\n\")), \"\\n\", React.createElement(_components.p, null, \"Agora podemos adicionar algumas dependências.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-json\"\n  }, \"{\\n  \\\"name\\\": \\\"minha-empresa/meu-projeto\\\",\\n  \\\"description\\\": \\\"Meu primeiro projeto com Composer\\\",\\n  \\\"license\\\": \\\"proprietary\\\",\\n  \\\"require\\\": {\\n    \\\"yiisoft/yii2\\\": \\\"~2.0.0\\\"\\n  }\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"Dentro da propriedade \", React.createElement(_components.code, null, \"require\"), \", eu defini que meu projeto tem como dependência o framework Yii.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Por que ele está descrito como \", React.createElement(_components.code, null, \"yiisoft/yii2\"), \"?\"), \" Porque foi assim que a Yiisoft o registrou no \", React.createElement(_components.a, {\n    href: \"https://packagist.org/packages/yiisoft/yii2\"\n  }, \"Packagist\"), \", o principal repositório de pacotes do Composer.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"O que significa \", React.createElement(_components.code, null, \"~2.0.0\"), \"?\"), \" Estamos especificando que queremos qualquer pacote cuja versão seja igual ou superior a 2.0.0 e inferior a 2.1.0. Existem várias \", React.createElement(_components.a, {\n    href: \"https://getcomposer.org/doc/02-libraries.md#specifying-the-version\"\n  }, \"formas de descrever as versões\"), \" que precisamos. As recomendações principais são (1) evitar as versões \", React.createElement(_components.code, null, \"dev-master\"), \", que são baseadas no último código escrito nos pacotes e, portanto, mutáveis; e (2) evitar a tentação de utilizar \", React.createElement(_components.code, null, \"*\"), \" para ter sempre a última versão disponível. Existe uma diferença enorme, por exemplo, entre a versão 1.1 e a versão 2.0 do Yii. Atualizar dependências assim significa conviver com o fato de ter que mudar todo seu código quando uma delas for atualizada.\"), \"\\n\", React.createElement(_components.h1, null, \"Enfim, como utilizar?\"), \"\\n\", React.createElement(_components.p, null, \"Com tudo isso feito, estamos a um mero passo de ter o Yii no nosso projeto:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sh\"\n  }, \"$ composer install\\n\")), \"\\n\", React.createElement(_components.p, null, \"O Composer vai verificar os repositórios, como o Packagist; verificar se possuem os pacotes necessários; baixá-los; adicioná-los ao diretório \", React.createElement(_components.code, null, \"vendor\"), \" do projeto; e criar um arquivo \", React.createElement(_components.code, null, \"composer.lock\"), \", que é uma versão superdetalhada do \", React.createElement(_components.code, null, \"composer.json\"), \", descrevendo até todas as subdepências (i.e., as dependências das dependências do projeto) e versões baixadas.\"), \"\\n\", React.createElement(_components.p, null, \"Pronto.\"), \"\\n\", React.createElement(_components.p, null, \"Para atualizar as dependências ou reinstalá-las, utilize:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sh\"\n  }, \"$ composer update\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/tassoevan.github.io/tassoevan.github.io/posts/2015-06-06/como-instalar-e-usar-o-composer.mdx\";\nimport React from 'react';\nimport SEO from '../components/SEO';\nimport Layout from '../components/Layout';\nimport NavBar from '../components/NavBar';\nimport Post from '../components/Post';\nconst query = \"2179984064\";\nfunction PostTemplate(_ref) {\n  let {pageContext, data, children} = _ref;\n  const {frontmatter: {title, date}, slug, next} = pageContext;\n  const {excerpt, timeToRead} = data.mdx;\n  return React.createElement(React.Fragment, null, React.createElement(SEO, {\n    title: title,\n    description: excerpt\n  }), React.createElement(Layout, null, React.createElement(NavBar, null), React.createElement(Post, {\n    slug: slug,\n    title: title,\n    date: new Date(Date.parse(date)),\n    timeToRead: Math.ceil(timeToRead),\n    next: next\n  }, children)));\n}\nPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSiteMetadata } from '../hooks/useSiteMetadata';\nimport Link from './Link';\n\nconst StyledNavBar = styled.nav`\n  h1 {\n    font-size: 1em;\n    font-weight: normal;\n    margin: 0;\n  }\n`;\n\nfunction NavBar() {\n  const { title, description } = useSiteMetadata();\n\n  return (\n    <StyledNavBar>\n      <h1>\n        <Link href='/' title={description}>\n          {title}\n        </Link>\n      </h1>\n    </StyledNavBar>\n  );\n}\n\nexport default NavBar;\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","em","h1","h2","pre","code","strong","_provideComponents","components","React","href","className","wrapper","MDXLayout","PostTemplate","_ref","pageContext","data","children","frontmatter","title","date","slug","next","excerpt","timeToRead","mdx","SEO","description","Layout","NavBar","Post","Date","parse","Math","ceil","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","StyledNavBar","styled","nav","withConfig","displayName","componentId","useSiteMetadata","Link","emptyComponents","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}