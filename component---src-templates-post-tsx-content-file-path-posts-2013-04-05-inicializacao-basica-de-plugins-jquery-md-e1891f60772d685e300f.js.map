{"version":3,"file":"component---src-templates-post-tsx-content-file-path-posts-2013-04-05-inicializacao-basica-de-plugins-jquery-md-e1891f60772d685e300f.js","mappings":"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","sources":["webpack://@tassoevan/tassoevan.github.io/./posts/2013-04-05/inicializacao-basica-de-plugins-jquery.md","webpack://@tassoevan/tassoevan.github.io/./src/templates/post.tsx","webpack://@tassoevan/tassoevan.github.io/./src/hooks/useMediaQuery.ts","webpack://@tassoevan/tassoevan.github.io/./src/components/Layout.tsx","webpack://@tassoevan/tassoevan.github.io/./src/components/Link.tsx","webpack://@tassoevan/tassoevan.github.io/./src/components/NavBar.tsx","webpack://@tassoevan/tassoevan.github.io/./src/components/Post.tsx","webpack://@tassoevan/tassoevan.github.io/./src/components/SEO.tsx","webpack://@tassoevan/tassoevan.github.io/./src/siteMetadata.ts","webpack://@tassoevan/tassoevan.github.io/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"// Basic jQuery plugins initialization\\nvar MyNamespace = MyNamespace || {};\\n\\nMyNamespace.applyPlugins = function (parent) {\\n  if (!parent) parent = $('body');\\n\\n  $('[data-focus=auto]', parent).focus();\\n\\n  var richEdits = $('textarea[data-rich=true]');\\n  if (richEdits.size() > 0) {\\n    richEdits.fadeTo(0, 1e-8);\\n\\n    // head.js used here for instance\\n    head.js('/js/vendor/ckeditor/ckeditor.js').ready(function () {\\n      richEdits.fadeTo(0, 1).each(function () {\\n        $(this).myRichEditorPlugin();\\n      });\\n    });\\n  }\\n\\n  // more stuff ...\\n};\\n\\n$(function () {\\n  MyNamespace.applyPlugins();\\n});\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/tassoevan.github.io/tassoevan.github.io/posts/2013-04-05/inicializacao-basica-de-plugins-jquery.md\";\nimport React from 'react';\nimport SEO from '../components/SEO';\nimport Layout from '../components/Layout';\nimport NavBar from '../components/NavBar';\nimport Post from '../components/Post';\nimport {siteMetadata} from '../siteMetadata';\nconst query = \"215279814\";\nfunction PostTemplate(_ref) {\n  let {pageContext, data, children} = _ref;\n  const {frontmatter: {title, date}, slug, next} = pageContext;\n  return React.createElement(React.Fragment, null, React.createElement(Layout, {\n    title: title\n  }, React.createElement(NavBar, {\n    title: siteMetadata.title,\n    description: siteMetadata.description\n  }), React.createElement(Post, {\n    slug: slug,\n    title: title,\n    date: Date.parse(date),\n    timeToRead: Math.ceil(data.mdx.fields.timeToRead.minutes),\n    next: next\n  }, children)));\n}\nPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const Head = _ref2 => {\n  let {pageContext, data, children} = _ref2;\n  const {frontmatter: {title}} = pageContext;\n  const {excerpt} = data.mdx;\n  return React.createElement(SEO, {\n    title: title,\n    description: excerpt\n  });\n};\n","import { useEffect, useState } from 'react';\n\nexport const useStaticMediaQuery = (_query: string) => {\n  return false;\n};\n\nexport const useDynamicMediaQuery = (query: string) => {\n  const [isMatching, setMatching] = useState(() => matchMedia(query).matches);\n\n  useEffect(() => {\n    const mediaQuery = matchMedia(query);\n\n    const handleChange = () => {\n      setMatching(mediaQuery.matches);\n    };\n\n    mediaQuery.addEventListener('change', handleChange);\n\n    return () => {\n      mediaQuery.removeEventListener('change', handleChange);\n    };\n  }, [query]);\n\n  return isMatching;\n};\n\nexport const useMediaQuery =\n  typeof window !== 'undefined' && !!window.matchMedia\n    ? useDynamicMediaQuery\n    : useStaticMediaQuery;\n","import React, { ReactNode } from 'react';\nimport styled, {\n  createGlobalStyle,\n  ThemeProvider,\n  css,\n} from 'styled-components';\nimport 'normalize.css';\nimport { useMediaQuery } from '../hooks/useMediaQuery';\n\ndeclare module 'styled-components' {\n  export interface DefaultTheme {\n    isDark: boolean;\n  }\n}\n\nconst wordWrapMixin = css`\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  -ms-word-break: break-all;\n  word-break: break-word;\n  -ms-hyphens: auto;\n  -moz-hyphens: auto;\n  -webkit-hyphens: auto;\n  hyphens: auto;\n`;\n\nconst foregroundColor = (props: { theme: { isDark: boolean } }) =>\n  props.theme.isDark ? '#ececec' : 'hsl(0deg, 0%, 30%)';\n\nconst backgroundColor = (props: { theme: { isDark: boolean } }) =>\n  props.theme.isDark ? 'hsl(0deg, 0%, 30%)' : '#ececec';\n\nconst alternativeBackgroundColor = (props: { theme: { isDark: boolean } }) =>\n  props.theme.isDark ? 'hsla(0deg, 0%, 70%, 10%)' : 'hsla(0deg, 0%, 30%, 10%)';\n\nconst primaryColor = 'rgb(46, 170, 190)';\nconst accentColor = 'rgba(46, 170, 190, 90%)';\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    font-size: 100%;\n    font-family: Baskerville, 'Baskerville Old Face', 'Goudy Old Style', Garamond, 'Times New Roman', serif;\n    scroll-behavior: smooth;\n  }\n\n  body {\n    font-size: 1rem;\n    line-height: 1.5;\n    margin: 0;\n    color: ${foregroundColor};\n    background-color: ${backgroundColor};\n    padding: 1rem;\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    line-height: 1.1;\n    font-family: inherit;\n    font-weight: 700;\n    margin-top: 3rem;\n    margin-bottom: 1.5rem;\n    ${wordWrapMixin}\n  }\n\n  h1 { font-size: 2.35em }\n  h2 { font-size: 2.00em }\n  h3 { font-size: 1.75em }\n  h4 { font-size: 1.5em }\n  h5 { font-size: 1.25em }\n  h6 { font-size: 1em }\n\n  p {\n    margin-top: 0px;\n    margin-bottom: 2.5rem;\n  }\n\n  small, sub, sup {\n    font-size: 75%;\n  }\n\n  hr {\n    border-color: ${primaryColor};\n  }\n\n  a {\n    text-decoration: none;\n    color: ${primaryColor};\n\n    &:hover {\n      color: ${accentColor};\n      border-bottom: 1px dashed ${foregroundColor};\n    }\n  }\n\n  ul {\n    padding-left: 1.4em;\n    margin-top: 0px;\n    margin-bottom: 2.5rem;\n  }\n\n  li {\n    margin-bottom: 0.4em;\n  }\n\n  blockquote {\n    font-style: italic;\n    margin-left: 1.5em;\n    padding-left: 1em;\n    border-left: 3px solid ${primaryColor};\n  }\n\n  img {\n    height: auto;\n    max-width: 100%;\n    margin-top: 0px;\n    margin-bottom: 2.5rem;\n  }\n\n  pre {\n    background-color: ${alternativeBackgroundColor};\n    display: block;\n    padding: 1em;\n    overflow-x: auto;\n    margin-top: 0px;\n    margin-bottom: 2.5rem;\n  }\n\n  code {\n    font-size: 0.9em;\n    padding: 0 0.5em;\n    background-color: ${alternativeBackgroundColor};\n    white-space: pre-wrap;\n  }\n\n  pre > code {\n    padding: 0;\n    background-color: transparent;\n    white-space: pre;\n  }\n\n  table {\n    text-align: justify;\n    width: 100%;\n    border-collapse: collapse;\n  }\n\n  td, th {\n    padding: 0.5em;\n    border-bottom: 1px solid ${alternativeBackgroundColor};\n  }\n\n  input, textarea {\n    border: 1px solid ${foregroundColor};\n\n    &:focus {\n      border: 1px solid ${primaryColor};\n    }\n  }\n\n  textarea {\n    width: 100%;\n  }\n\n  .button, button, input[type=\"submit\"], input[type=\"reset\"], input[type=\"button\"] {\n    display: inline-block;\n    padding: 5px 10px;\n    text-align: center;\n    text-decoration: none;\n    white-space: nowrap;\n\n    background-color: ${primaryColor};\n    color: ${backgroundColor};\n    border-radius: 1px;\n    border: 1px solid ${primaryColor};\n    cursor: pointer;\n    box-sizing: border-box;\n\n    &[disabled] {\n      cursor: default;\n      opacity: .5;\n    }\n\n    &:focus, &:hover {\n      background-color: ${accentColor};\n      border-color: ${accentColor};\n      color: ${backgroundColor};\n      outline: 0;\n    }\n  }\n\n  textarea, select, input[type] {\n    color: ${foregroundColor};\n    padding: 6px 10px;\n    margin-bottom: 10px;\n    background-color: ${alternativeBackgroundColor};\n    border: 1px solid ${alternativeBackgroundColor};\n    border-radius: 4px;\n    box-shadow: none;\n    box-sizing: border-box;\n\n    &:focus {\n      border: 1px solid ${primaryColor};\n      outline: 0;\n    }\n  }\n\n  input[type=\"checkbox\"]:focus {\n    outline: 1px dotted ${primaryColor};\n  }\n\n  label, legend, fieldset {\n    display: block;\n    margin-bottom: .5rem;\n    font-weight: 600;\n  }\n`;\n\nconst BodyTitle = styled.h1`\n  display: none;\n`;\n\ninterface LayoutProps {\n  children: ReactNode;\n  title: string;\n}\n\nfunction Layout({ children, title }: LayoutProps) {\n  const preferDark = useMediaQuery('(prefers-color-scheme: dark)');\n\n  return (\n    <ThemeProvider theme={{ isDark: preferDark }}>\n      <GlobalStyle />\n      <BodyTitle>{title}</BodyTitle>\n      {children}\n    </ThemeProvider>\n  );\n}\n\nexport default Layout;\n","import { Link as GatsbyLink } from 'gatsby';\n\nimport React, { ReactNode } from 'react';\n\ninterface LinkProps {\n  href: string;\n  title?: string;\n  children: ReactNode;\n}\n\nfunction Link({ href, title, children }: LinkProps) {\n  return (\n    <GatsbyLink to={href} title={title}>\n      {children}\n    </GatsbyLink>\n  );\n}\n\nexport default Link;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Link from './Link';\n\nconst StyledNavBar = styled.nav`\n  h1 {\n    font-size: 1em;\n    font-weight: normal;\n    margin: 0;\n  }\n`;\n\ninterface NavBarProps {\n  title: string;\n  description: string;\n}\n\nfunction NavBar({ title, description }: NavBarProps) {\n  return (\n    <StyledNavBar>\n      <h1>\n        <Link href='/' title={description}>\n          {title}\n        </Link>\n      </h1>\n    </StyledNavBar>\n  );\n}\n\nexport default NavBar;\n","import React, { ReactNode } from 'react';\nimport styled from 'styled-components';\nimport Link from './Link';\n\nconst StyledPost = styled.div`\n  max-width: 38em;\n  margin: 0 auto;\n`;\n\nconst NextArticle = styled.footer`\n  border-top: 1pt dashed currentColor;\n  text-align: right;\n  text-align: end;\n`;\n\ninterface PostProps {\n  title: string;\n  date: number;\n  children?: ReactNode;\n  timeToRead: number;\n  slug: string;\n  next?: {\n    slug: string;\n    title: string;\n  };\n}\n\nfunction Post({ title, date, children, timeToRead, slug, next }: PostProps) {\n  return (\n    <StyledPost>\n      <header>\n        <h2>\n          <Link href={slug}>{title}</Link>\n        </h2>\n        <div>\n          <time dateTime={new Date(date).toISOString()}>\n            {new Intl.DateTimeFormat('pt-BR', {\n              dateStyle: 'long',\n              timeStyle: 'short',\n            }).format(date)}\n          </time>{' '}\n          &middot; {timeToRead} {timeToRead === 1 ? 'minuto' : 'minutos'}\n        </div>\n      </header>\n      {children && <article>{children}</article>}\n      {next && (\n        <NextArticle>\n          <Link href={next.slug}>{next.title}</Link>\n        </NextArticle>\n      )}\n    </StyledPost>\n  );\n}\n\nexport default Post;\n","import React from 'react';\nimport { siteMetadata } from '../siteMetadata';\n\ninterface SEOProps {\n  title?: string;\n  description?: string;\n  lang?: string;\n}\n\nfunction SEO(props: SEOProps) {\n  const lang = props.lang || siteMetadata.lang;\n  const title = props.title\n    ? `${props.title} | ${siteMetadata.title}`\n    : siteMetadata.title;\n  const description = props.description || siteMetadata.description;\n  const creator = siteMetadata.twitterHandle;\n\n  return (\n    <>\n      <html lang={lang} />\n      <title>{title}</title>\n      <meta name='description' content={description} />\n      <meta property='og:title' content={title} />\n      <meta property='og:description' content={description} />\n      <meta property='og:type' content='website' />\n      <meta name='twitter:card' content='summary' />\n      <meta name='twitter:creator' content={creator} />\n      <meta name='twitter:title' content={title} />\n      <meta name='twitter:description' content={description} />\n    </>\n  );\n}\n\nexport default SEO;\n","export const siteMetadata = {\n  lang: 'pt-BR',\n  title: 'Tasso & As Vozes',\n  description:\n    'Um lugar calmo e tranquilo onde dialogo com as vozes que habitam a minha cabeça',\n  twitterHandle: '@tassoevan',\n} as const;\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","pre","code","_provideComponents","components","React","className","wrapper","MDXLayout","PostTemplate","_ref","pageContext","data","children","frontmatter","title","date","slug","next","Layout","NavBar","siteMetadata","description","Post","Date","parse","timeToRead","Math","ceil","mdx","fields","minutes","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref2","excerpt","SEO","useMediaQuery","window","matchMedia","query","isMatching","setMatching","useState","matches","useEffect","mediaQuery","handleChange","addEventListener","removeEventListener","_query","wordWrapMixin","css","foregroundColor","theme","isDark","backgroundColor","alternativeBackgroundColor","primaryColor","accentColor","GlobalStyle","createGlobalStyle","BodyTitle","styled","h1","withConfig","displayName","componentId","preferDark","ThemeProvider","href","GatsbyLink","to","StyledNavBar","nav","Link","StyledPost","div","NextArticle","footer","dateTime","toISOString","Intl","DateTimeFormat","dateStyle","timeStyle","format","lang","creator","twitterHandle","name","content","property","emptyComponents","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}