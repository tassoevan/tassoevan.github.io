{"version":3,"file":"component---src-templates-post-tsx-content-file-path-posts-2013-03-21-htaccess-snippets-mdx-3847a22ba39d86c1ffee.js","mappings":"0NAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,IAAK,MACLC,KAAM,SACLC,EAAAA,EAAAA,KAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,cAAoBP,EAAYG,IAAK,KAAMI,EAAAA,cAAoBP,EAAYI,KAAM,CACtFI,UAAW,qBACV,u0dACL,CAKA,MAJA,SAAoBT,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOU,QAASC,GAAaT,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,KAAsBN,EAAMO,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWX,EAAOQ,EAAAA,cAAoBT,EAAmBC,IAAUD,EAAkBC,EAC9H,E,wCCRA,SAASY,EAAaC,GACpB,IAAI,YAACC,EAAW,KAAEC,EAAI,SAAEC,GAAYH,EACpC,MAAOI,aAAa,MAACC,EAAK,KAAEC,GAAK,KAAEC,EAAI,KAAEC,GAAQP,GAC3C,QAACQ,EAAO,WAAEC,GAAcR,EAAKS,IACnC,OAAOhB,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBiB,EAAAA,EAAK,CACxEP,MAAOA,EACPQ,YAAaJ,IACXd,EAAAA,cAAoBmB,EAAAA,EAAQ,KAAMnB,EAAAA,cAAoBoB,EAAAA,EAAQ,MAAOpB,EAAAA,cAAoBqB,EAAAA,EAAM,CACjGT,KAAMA,EACNF,MAAOA,EACPC,KAAM,IAAIW,KAAKA,KAAKC,MAAMZ,IAC1BI,WAAYS,KAAKC,KAAKV,GACtBF,KAAMA,GACLL,IACL,CAEe,SAASkB,EAAiBlC,GACvC,OAAOQ,EAAAA,cAAoBI,EAAcZ,EAAOQ,EAAAA,cAAoB2B,EAAqBnC,GAC3F,C,mECpBA,MAAMoC,EAAeC,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,uBAAAC,YAAA,eAAVJ,CAAU,oDAsB/B,IAdA,WACE,MAAM,MAAEnB,EAAK,YAAEQ,IAAgBgB,EAAAA,EAAAA,KAE/B,OACElC,EAAAA,cAAC4B,EAAY,KACX5B,EAAAA,cAAA,UACEA,EAAAA,cAACmC,EAAAA,EAAI,CAACC,KAAK,IAAI1B,MAAOQ,GACnBR,IAKX,C,qECEA,MAAM2B,EAAkB,CAAC,EAEnBC,EAAa,gBAAoBD,GAUhC,SAASE,EAAiBxC,GAC/B,MAAMyC,EAAoB,aAAiBF,GAG3C,OAAO,WACL,WAEE,MAA0B,mBAAfvC,EACFA,EAAWyC,GAGb,IAAIA,KAAsBzC,EACnC,GACA,CAACyC,EAAmBzC,GAExB,C","sources":["webpack://@tassoevan/tassoevan.github.io/./posts/2013-03-21/htaccess-snippets.mdx","webpack://@tassoevan/tassoevan.github.io/./src/templates/post.tsx","webpack://@tassoevan/tassoevan.github.io/./src/components/NavBar.tsx","webpack://@tassoevan/tassoevan.github.io/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-htaccess\"\n  }, \"# ------------------------------------------------------------------------------\\n# Redirecionar para mobile a partir do agente de usuário\\n# ------------------------------------------------------------------------------\\n<IfModule mod_rewrite.c>\\n   RewriteEngine On\\n   RewriteCond %{HTTP_USER_AGENT} \\\"android|blackberry|googlebot-mobile|iemobile|ipad|iphone|ipod|opera mobile|palmos|webos\\\" [NC]\\n   RewriteRule ^$ http://m.example.com/ [L,R=302]\\n</IfModule>\\n<IfModule mod_rewrite.c>\\n   RewriteEngine On\\n   RewriteCond %{HTTP_USER_AGENT} \\\"!(android|blackberry|googlebot-mobile|iemobile|ipad|iphone|ipod|opera mobile|palmos|webos)\\\" [NC]\\n   RewriteRule ^$ http://www.example.com/ [L,R=302]\\n</IfModule>\\n\\n# ------------------------------------------------------------------------------\\n# Ativar Google Chrome Frame\\n# ------------------------------------------------------------------------------\\n<IfModule mod_headers.c>\\n  Header set X-UA-Compatible \\\"IE=Edge,chrome=1\\\"\\n  <FilesMatch \\\"\\\\.(appcache|crx|css|eot|gif|htc|ico|jpe?g|js|m4a|m4v|manifest|mp4|oex|oga|ogg|ogv|otf|pdf|png|safariextz|svg|svgz|ttf|vcf|webm|webp|woff|xml|xpi)$\\\">\\n      Header unset X-UA-Compatible\\n  </FilesMatch>\\n</IfModule>\\n\\n# ------------------------------------------------------------------------------\\n# Permissão de acesso às Webfonts\\n# ------------------------------------------------------------------------------\\n# Nota: qualquer domínio pode ser especificado no lugar de \\\"*\\\"\\n<IfModule mod_headers.c>\\n  <FilesMatch \\\"\\\\.(eot|font.css|otf|ttc|ttf|woff)$\\\">\\n      Header set Access-Control-Allow-Origin \\\"*\\\"\\n  </FilesMatch>\\n</IfModule>\\n\\n# ------------------------------------------------------------------------------\\n# MIME type apropriado para todos os arquivos\\n# ------------------------------------------------------------------------------\\nAddType application/javascript         js jsonp\\nAddType application/json               json\\nAddType audio/mp4                      m4a f4a f4b\\nAddType audio/ogg                      oga ogg\\nAddType video/mp4                      mp4 m4v f4v f4p\\nAddType video/ogg                      ogv\\nAddType video/webm                     webm\\nAddType video/x-flv                    flv\\nAddType     image/svg+xml              svg svgz\\nAddEncoding gzip                       svgz\\nAddType application/vnd.ms-fontobject  eot\\nAddType application/x-font-ttf         ttf ttc\\nAddType application/x-font-woff        woff\\nAddType font/opentype                  otf\\nAddType application/octet-stream            safariextz\\nAddType application/x-chrome-extension      crx\\nAddType application/x-opera-extension       oex\\nAddType application/x-shockwave-flash       swf\\nAddType application/x-web-app-manifest+json webapp\\nAddType application/x-xpinstall             xpi\\nAddType application/xml                     rss atom xml rdf\\nAddType image/webp                          webp\\nAddType image/x-icon                        ico\\nAddType text/cache-manifest                 appcache manifest\\nAddType text/vtt                            vtt\\nAddType text/x-component                    htc\\nAddType text/x-vcard                        vcf\\n\\n# ------------------------------------------------------------------------------\\n# Compressão gzip\\n# ------------------------------------------------------------------------------\\n<IfModule mod_deflate.c>\\n  <IfModule mod_setenvif.c>\\n      <IfModule mod_headers.c>\\n          SetEnvIfNoCase ^(Accept-EncodXng|X-cept-Encoding|X{15}|~{15}|-{15})$ ^((gzip|deflate)\\\\s*,?\\\\s*)+|[X~-]{4,13}$ HAVE_Accept-Encoding\\n          RequestHeader append Accept-Encoding \\\"gzip,deflate\\\" env=HAVE_Accept-Encoding\\n      </IfModule>\\n  </IfModule>\\n  <IfModule mod_filter.c>\\n      AddOutputFilterByType DEFLATE application/atom+xml \\\\\\n                                    application/javascript \\\\\\n                                    application/json \\\\\\n                                    application/rss+xml \\\\\\n                                    application/vnd.ms-fontobject \\\\\\n                                    application/x-font-ttf \\\\\\n                                    application/xhtml+xml \\\\\\n                                    application/xml \\\\\\n                                    font/opentype \\\\\\n                                    image/svg+xml \\\\\\n                                    image/x-icon \\\\\\n                                    text/css \\\\\\n                                    text/html \\\\\\n                                    text/plain \\\\\\n                                    text/x-component \\\\\\n                                    text/xml\\n  </IfModule>\\n</IfModule>\\n\\n# ------------------------------------------------------------------------------\\n# Expires headers (para um melhor controle de cache)\\n# ------------------------------------------------------------------------------\\n<IfModule mod_expires.c>\\n  ExpiresActive on\\n  ExpiresDefault                          \\\"access plus 1 minute\\\"\\n\\n  ExpiresByType text/cache-manifest       \\\"access plus 0 seconds\\\"\\n  ExpiresByType text/html                 \\\"access plus 0 seconds\\\"\\n  ExpiresByType application/json          \\\"access plus 0 seconds\\\"\\n  ExpiresByType application/xml           \\\"access plus 0 seconds\\\"\\n  ExpiresByType text/xml                  \\\"access plus 0 seconds\\\"\\n  ExpiresByType application/atom+xml      \\\"access plus 1 hour\\\"\\n  ExpiresByType application/rss+xml       \\\"access plus 1 hour\\\"\\n  ExpiresByType image/x-icon              \\\"access plus 1 minute\\\"\\n  ExpiresByType audio/ogg                 \\\"access plus 1 month\\\"\\n  ExpiresByType image/gif                 \\\"access plus 1 month\\\"\\n  ExpiresByType image/jpeg                \\\"access plus 1 month\\\"\\n  ExpiresByType image/png                 \\\"access plus 1 month\\\"\\n  ExpiresByType video/mp4                 \\\"access plus 1 month\\\"\\n  ExpiresByType video/ogg                 \\\"access plus 1 month\\\"\\n  ExpiresByType video/webm                \\\"access plus 1 month\\\"\\n  ExpiresByType text/x-component          \\\"access plus 1 month\\\"\\n  ExpiresByType application/vnd.ms-fontobject \\\"access plus 1 month\\\"\\n  ExpiresByType application/x-font-ttf    \\\"access plus 1 month\\\"\\n  ExpiresByType application/x-font-woff   \\\"access plus 1 month\\\"\\n  ExpiresByType font/opentype             \\\"access plus 1 month\\\"\\n  ExpiresByType image/svg+xml             \\\"access plus 1 month\\\"\\n  ExpiresByType application/javascript    \\\"access plus 1 minute\\\"\\n  ExpiresByType text/css                  \\\"access plus 1 minute\\\"\\n</IfModule>\\n\\n# ------------------------------------------------------------------------------\\n# Remoção de ETag\\n# ------------------------------------------------------------------------------\\n<IfModule mod_headers.c>\\n  Header unset ETag\\n</IfModule>\\nFileETag None\\n\\n# ------------------------------------------------------------------------------\\n# Remover o flicker em rollovers CSS no Internet Explorer\\n# ------------------------------------------------------------------------------\\nBrowserMatch \\\"MSIE\\\" brokenvary=1\\nBrowserMatch \\\"Mozilla/4.[0-9]{2}\\\" brokenvary=1\\nBrowserMatch \\\"Opera\\\" !brokenvary\\nSetEnvIf brokenvary 1 force-no-vary\\n\\n# ------------------------------------------------------------------------------\\n# Requisições AJAX cross-domain\\n# ------------------------------------------------------------------------------\\n<IfModule mod_headers.c>\\n  Header set Access-Control-Allow-Origin \\\"*\\\"\\n</IfModule>\\n\\n# ------------------------------------------------------------------------------\\n# Imagens CORS habilitadas (@crossorigin)\\n# ------------------------------------------------------------------------------\\n<IfModule mod_setenvif.c>\\n  <IfModule mod_headers.c>\\n      <FilesMatch \\\"\\\\.(gif|ico|jpe?g|png|svg|svgz|webp)$\\\">\\n          SetEnvIf Origin \\\":\\\" IS_CORS\\n          Header set Access-Control-Allow-Origin \\\"*\\\" env=IS_CORS\\n      </FilesMatch>\\n  </IfModule>\\n</IfModule>\\n\\n# ------------------------------------------------------------------------------\\n# Concatenação entre arquivos js e css específicos\\n# ------------------------------------------------------------------------------\\n# Nota: e.g., em script.combined.js você pode ter\\n#       <!--#include file=\\\"libs/jquery-1.5.0.min.js\\\" -->\\n#       <!--#include file=\\\"plugins/jquery.idletimer.js\\\" -->\\n<FilesMatch \\\"\\\\.combined\\\\.js$\\\">\\n  Options +Includes\\n  AddOutputFilterByType INCLUDES application/javascript application/json\\n  SetOutputFilter INCLUDES\\n</FilesMatch>\\n<FilesMatch \\\"\\\\.combined\\\\.css$\\\">\\n  Options +Includes\\n  AddOutputFilterByType INCLUDES text/css\\n  SetOutputFilter INCLUDES\\n</FilesMatch>\\n\\n# ------------------------------------------------------------------------------\\n# Impedir provedores de redes mobile (3G) de modificar seu site\\n# ------------------------------------------------------------------------------\\n<IfModule mod_headers.c>\\n  Header set Cache-Control \\\"no-transform\\\"\\n</IfModule>\\n\\n# ------------------------------------------------------------------------------\\n# Keep-Alive\\n# ------------------------------------------------------------------------------\\n# Nota: existem algumas desvantagens em habilitar esta opção.\\n#       Ative-a se você serve muito conteúdo estático\\n<IfModule mod_headers.c>\\n  Header set Connection Keep-Alive\\n</IfModule>\\n\\n# ------------------------------------------------------------------------------\\n# Permitir a criação de cookies em iframes\\n# ------------------------------------------------------------------------------\\n# Nota: apenas Internet Explorer\\n<IfModule mod_headers.c>\\n  Header set P3P \\\"policyref=\\\\\\\"/w3c/p3p.xml\\\\\\\", CP=\\\\\\\"IDC DSP COR ADM DEVi TAIi PSA PSD IVAi IVDi CONi HIS OUR IND CNT\\\\\\\"\\\"\\n</IfModule>\\n\\n# ------------------------------------------------------------------------------\\n# Iniciar o motor de reescrita de URLs\\n# ------------------------------------------------------------------------------\\n<IfModule mod_rewrite.c>\\n  Options +FollowSymlinks\\n  RewriteEngine On\\n#   RewriteBase /\\n</IfModule>\\n\\n# ------------------------------------------------------------------------------\\n# Reescrever \\\"example.com -> www.example.com\\\"\\n# ------------------------------------------------------------------------------\\n<IfModule mod_rewrite.c>\\n  RewriteCond %{HTTPS} !=on\\n  RewriteCond %{HTTP_HOST} !^www\\\\..+$\\n  # Exceto para localhost\\n  RewriteCond %{HTTP_HOST} !^localhost$\\n  # Exceto para endereço IP\\n  RewriteCond %{HTTP_HOST} !^(\\\\d{1,3}\\\\.){3}\\\\d{1,3}$ [NC]\\n  RewriteRule ^ http://www.%{HTTP_HOST}%{REQUEST_URI} [R=301,L]\\n</IfModule>\\n\\n# ------------------------------------------------------------------------------\\n# Reescrever \\\"www.example.com -> example.com\\\"\\n# ------------------------------------------------------------------------------\\n<IfModule mod_rewrite.c>\\n  RewriteCond %{HTTPS} !=on\\n  RewriteCond %{HTTP_HOST} ^www\\\\.(.+)$ [NC]\\n  RewriteRule ^ http://%1%{REQUEST_URI} [R=301,L]\\n</IfModule>\\n\\n# ------------------------------------------------------------------------------\\n# Melhor cache baseado em nome de arquivo\\n# ------------------------------------------------------------------------------\\n# Nota: link \\\"css/estilos.css\\\" como \\\"css/estilos.123.css\\\"\\n<IfModule mod_rewrite.c>\\n  RewriteCond %{REQUEST_FILENAME} !-f\\n  RewriteCond %{REQUEST_FILENAME} !-d\\n  RewriteRule ^(.+)\\\\.(\\\\d+)\\\\.(js|css|png|jpg|gif)$ $1.$3 [L]\\n</IfModule>\\n\\n# ------------------------------------------------------------------------------\\n# Impedir alguns alertas SSL\\n# ------------------------------------------------------------------------------\\n<IfModule mod_rewrite.c>\\n  RewriteCond %{SERVER_PORT} !^443\\n  RewriteRule ^ https://example.com%{REQUEST_URI} [R=301,L]\\n</IfModule>\\n\\n# ------------------------------------------------------------------------------\\n# Impedir erros 404 para pastas não existentes em URIs reescritas\\n# ------------------------------------------------------------------------------\\nOptions -MultiViews\\n\\n# ------------------------------------------------------------------------------\\n# Página 404 personalizada\\n# ------------------------------------------------------------------------------\\nErrorDocument 404 /404.html\\n\\n# ------------------------------------------------------------------------------\\n# Codificação UTF-8\\n# ------------------------------------------------------------------------------\\nAddDefaultCharset utf-8\\nAddCharset utf-8 .atom .css .js .json .rss .vtt .xml\\n\\n# ------------------------------------------------------------------------------\\n# Remover assinatura do servidor\\n# ------------------------------------------------------------------------------\\n# Nota: apenas para a httpd.conf\\nServerSignature Off\\nServerTokens Prod\\n\\n# ------------------------------------------------------------------------------\\n# Impedir listagem em diretórios sem documento padrão\\n# ------------------------------------------------------------------------------\\n<IfModule mod_autoindex.c>\\n  Options -Indexes\\n</IfModule>\\n\\n# ------------------------------------------------------------------------------\\n# Impedir acesso a diretórios ocultos no Linux\\n# ------------------------------------------------------------------------------\\n# Nota: são diretórios cujo nome inicial com ponto, e.g. \\\".git\\\"\\n<IfModule mod_rewrite.c>\\n  RewriteCond %{SCRIPT_FILENAME} -d [OR]\\n  RewriteCond %{SCRIPT_FILENAME} -f\\n  RewriteRule \\\"(^|/)\\\\.\\\" - [F]\\n</IfModule>\\n\\n# ------------------------------------------------------------------------------\\n# Impedir acesso a arquivos de becape, código-fonte e configuração\\n# ------------------------------------------------------------------------------\\n<FilesMatch \\\"(\\\\.(bak|config|dist|fla|inc|ini|log|psd|sh|sql|swp)|~)$\\\">\\n  Order allow,deny\\n  Deny from all\\n  Satisfy All\\n</FilesMatch>\\n\\n# ------------------------------------------------------------------------------\\n# Configurações seguras para o PHP\\n# ------------------------------------------------------------------------------\\n# Nota: nem todos servidores suportam essas modificações via .htaccess\\nphp_flag  register_globals       Off\\nphp_value session.name           SESSIONID\\nphp_flag  magic_quotes_gpc       Off\\nphp_flag  expose_php             Off\\nphp_value error_reporting        -1\\nphp_flag  log_errors             On\\nphp_flag  display_errors         Off\\nphp_flag  display_startup_errors Off\\nphp_flag  html_errors            Off\\nphp_flag  ignore_repeated_errors Off\\nphp_flag  ignore_repeated_source Off\\nphp_value log_errors_max_len     1024\\nphp_value error_prepend_string   \\\" \\\"\\nphp_value error_append_string    \\\" \\\"\\n<IfModule mod_php5.c>\\n  php_value session.cookie_httponly true\\n</IfModule>\\n\\n# ------------------------------------------------------------------------------\\n# Redirecionar acesso para router PHP\\n# ------------------------------------------------------------------------------\\n# Nota: \\\"E=app:main\\\" especifica a variável\\n#       $_SERVER['REDIRECT_app'] = 'main';\\n<IfModule mod_rewrite.c>\\n  RewriteCond %{REQUEST_FILENAME} !-f\\n  RewriteRule ^ index.php [QSA,E=app:main,L]\\n</IfModule>\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/tassoevan.github.io/tassoevan.github.io/posts/2013-03-21/htaccess-snippets.mdx\";\nimport React from 'react';\nimport SEO from '../components/SEO';\nimport Layout from '../components/Layout';\nimport NavBar from '../components/NavBar';\nimport Post from '../components/Post';\nconst query = \"2179984064\";\nfunction PostTemplate(_ref) {\n  let {pageContext, data, children} = _ref;\n  const {frontmatter: {title, date}, slug, next} = pageContext;\n  const {excerpt, timeToRead} = data.mdx;\n  return React.createElement(React.Fragment, null, React.createElement(SEO, {\n    title: title,\n    description: excerpt\n  }), React.createElement(Layout, null, React.createElement(NavBar, null), React.createElement(Post, {\n    slug: slug,\n    title: title,\n    date: new Date(Date.parse(date)),\n    timeToRead: Math.ceil(timeToRead),\n    next: next\n  }, children)));\n}\nPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSiteMetadata } from '../hooks/useSiteMetadata';\nimport Link from './Link';\n\nconst StyledNavBar = styled.nav`\n  h1 {\n    font-size: 1em;\n    font-weight: normal;\n    margin: 0;\n  }\n`;\n\nfunction NavBar() {\n  const { title, description } = useSiteMetadata();\n\n  return (\n    <StyledNavBar>\n      <h1>\n        <Link href='/' title={description}>\n          {title}\n        </Link>\n      </h1>\n    </StyledNavBar>\n  );\n}\n\nexport default NavBar;\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","pre","code","_provideComponents","components","React","className","wrapper","MDXLayout","PostTemplate","_ref","pageContext","data","children","frontmatter","title","date","slug","next","excerpt","timeToRead","mdx","SEO","description","Layout","NavBar","Post","Date","parse","Math","ceil","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","StyledNavBar","styled","nav","withConfig","displayName","componentId","useSiteMetadata","Link","href","emptyComponents","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}