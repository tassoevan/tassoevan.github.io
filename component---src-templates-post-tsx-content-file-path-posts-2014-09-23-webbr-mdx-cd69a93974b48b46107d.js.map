{"version":3,"file":"component---src-templates-post-tsx-content-file-path-posts-2014-09-23-webbr-mdx-cd69a93974b48b46107d.js","mappings":"0NAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,EAAG,MACFC,EAAAA,EAAAA,KAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,gEAAiEI,EAAAA,cAAoBP,EAAYI,EAAG,CAC5LI,KAAM,6BACL,uCAAwC,OAAQD,EAAAA,cAAoBP,EAAYI,EAAG,CACpFI,KAAM,wBACL,UAAW,YAAaD,EAAAA,cAAoBP,EAAYI,EAAG,CAC5DI,KAAM,oCACL,0DAA2D,mBAAoBD,EAAAA,cAAoBP,EAAYI,EAAG,CACnHI,KAAM,8BACL,gBAAiB,iPAAkPD,EAAAA,cAAoBP,EAAYI,EAAG,CACvSI,KAAM,2BACL,sBAAuB,SAAUD,EAAAA,cAAoBP,EAAYI,EAAG,CACrEI,KAAM,iCACL,0CAA2C,6FAA8FD,EAAAA,cAAoBP,EAAYI,EAAG,CAC7KI,KAAM,2BACL,kBAAmB,SAAUD,EAAAA,cAAoBP,EAAYI,EAAG,CACjEI,KAAM,sBACL,kBAAmB,KAAM,KAAMD,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,iWAC7E,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOU,QAASC,GAAaT,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,KAAsBN,EAAMO,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWX,EAAOQ,EAAAA,cAAoBT,EAAmBC,IAAUD,EAAkBC,EAC9H,E,wCCtBA,SAASY,EAAaC,GACpB,IAAI,YAACC,EAAW,KAAEC,EAAI,SAAEC,GAAYH,EACpC,MAAOI,aAAa,MAACC,EAAK,KAAEC,GAAK,KAAEC,EAAI,KAAEC,GAAQP,GAC3C,QAACQ,EAAO,WAAEC,GAAcR,EAAKS,IACnC,OAAOhB,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBiB,EAAAA,EAAK,CACxEP,MAAOA,EACPQ,YAAaJ,IACXd,EAAAA,cAAoBmB,EAAAA,EAAQ,KAAMnB,EAAAA,cAAoBoB,EAAAA,EAAQ,MAAOpB,EAAAA,cAAoBqB,EAAAA,EAAM,CACjGT,KAAMA,EACNF,MAAOA,EACPC,KAAM,IAAIW,KAAKA,KAAKC,MAAMZ,IAC1BI,WAAYS,KAAKC,KAAKV,GACtBF,KAAMA,GACLL,IACL,CAEe,SAASkB,EAAiBlC,GACvC,OAAOQ,EAAAA,cAAoBI,EAAcZ,EAAOQ,EAAAA,cAAoB2B,EAAqBnC,GAC3F,C,mECpBA,MAAMoC,EAAeC,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,uBAAAC,YAAA,eAAVJ,CAAU,oDAsB/B,IAdA,WACE,MAAM,MAAEnB,EAAK,YAAEQ,IAAgBgB,EAAAA,EAAAA,KAE/B,OACElC,EAAAA,cAAC4B,EAAY,KACX5B,EAAAA,cAAA,UACEA,EAAAA,cAACmC,EAAAA,EAAI,CAAClC,KAAK,IAAIS,MAAOQ,GACnBR,IAKX,C,qECEA,MAAM0B,EAAkB,CAAC,EAEnBC,EAAa,gBAAoBD,GAUhC,SAASE,EAAiBvC,GAC/B,MAAMwC,EAAoB,aAAiBF,GAG3C,OAAO,WACL,WAEE,MAA0B,mBAAftC,EACFA,EAAWwC,GAGb,IAAIA,KAAsBxC,EACnC,GACA,CAACwC,EAAmBxC,GAExB,C","sources":["webpack://@tassoevan/tassoevan.github.io/./posts/2014-09-23/webbr.mdx","webpack://@tassoevan/tassoevan.github.io/./src/templates/post.tsx","webpack://@tassoevan/tassoevan.github.io/./src/components/NavBar.tsx","webpack://@tassoevan/tassoevan.github.io/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Recentemente desenvolvi um trabalho interessante no projeto\\n\", React.createElement(_components.a, {\n    href: \"http://atlas.sies.org.br/\"\n  }, \"Atlas Digital da Economia Solidária\"), \" da \", React.createElement(_components.a, {\n    href: \"http://alligo.com.br\"\n  }, \"Alligo\"), \" para o\\n\", React.createElement(_components.a, {\n    href: \"http://blogecosol.wordpress.com/\"\n  }, \"Grupo Ecosol (Grupo de Pesquisa em Economia Solidária)\"), \" como parte do\\n\", React.createElement(_components.a, {\n    href: \"http://sies.ecosol.org.br/\"\n  }, \"Projeto SIES\"), \" que envolveu a aplicação de alguns princípios de interoperabilidade, uma vez\\nque o front-end da aplicação é alimento por um web service que mantém uma API RESTful. Eis vou palestrar sobre este e\\noutros assuntos com o líder do projeto, \", React.createElement(_components.a, {\n    href: \"http://www.fititnt.org/\"\n  }, \"Emerson Rocha Luiz\"), \", na\\n\", React.createElement(_components.a, {\n    href: \"http://conferenciaweb.w3c.br/\"\n  }, \"Web.br 2014 Conferência Web W3C Brasil\"), \" nesta quinta-feira, dia 25. Este ano\\na conferência carrega uma comemoração especial: os \", React.createElement(_components.a, {\n    href: \"http://www.webat25.org/\"\n  }, \"25 anos da Web\"), \" e os \", React.createElement(_components.a, {\n    href: \"http://www.w3.org/\"\n  }, \"20 anos do W3C\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Alguns pontos que procurarei abordar incluem REST, HATEOAS, Web Semântica, JSON-LD e linked data em geral. O\\nEmerson vai descrever o que espera-se de atlas temáticos digitais e o que realmente é entregue, bem como o uso de dados\\nabertos em aplicações contruídas sobre a Open Web Platform e alguns tópicos especiais de acessibilidade e usabilidade.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/tassoevan.github.io/tassoevan.github.io/posts/2014-09-23/webbr.mdx\";\nimport React from 'react';\nimport SEO from '../components/SEO';\nimport Layout from '../components/Layout';\nimport NavBar from '../components/NavBar';\nimport Post from '../components/Post';\nconst query = \"2179984064\";\nfunction PostTemplate(_ref) {\n  let {pageContext, data, children} = _ref;\n  const {frontmatter: {title, date}, slug, next} = pageContext;\n  const {excerpt, timeToRead} = data.mdx;\n  return React.createElement(React.Fragment, null, React.createElement(SEO, {\n    title: title,\n    description: excerpt\n  }), React.createElement(Layout, null, React.createElement(NavBar, null), React.createElement(Post, {\n    slug: slug,\n    title: title,\n    date: new Date(Date.parse(date)),\n    timeToRead: Math.ceil(timeToRead),\n    next: next\n  }, children)));\n}\nPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSiteMetadata } from '../hooks/useSiteMetadata';\nimport Link from './Link';\n\nconst StyledNavBar = styled.nav`\n  h1 {\n    font-size: 1em;\n    font-weight: normal;\n    margin: 0;\n  }\n`;\n\nfunction NavBar() {\n  const { title, description } = useSiteMetadata();\n\n  return (\n    <StyledNavBar>\n      <h1>\n        <Link href='/' title={description}>\n          {title}\n        </Link>\n      </h1>\n    </StyledNavBar>\n  );\n}\n\nexport default NavBar;\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","_provideComponents","components","React","href","wrapper","MDXLayout","PostTemplate","_ref","pageContext","data","children","frontmatter","title","date","slug","next","excerpt","timeToRead","mdx","SEO","description","Layout","NavBar","Post","Date","parse","Math","ceil","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","StyledNavBar","styled","nav","withConfig","displayName","componentId","useSiteMetadata","Link","emptyComponents","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}